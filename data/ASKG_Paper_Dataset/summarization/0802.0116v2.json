{
  "sections": {
    "Abstract": "b'{\"search-keyword: clean-text| displaying exact matches\":\"arXiv:0802.0116v2 [cs.LO] 20 Mar 2008\\\\n\\\\nShallow Models for Non-Iterative Modal Logics\\\\nLutz Schr oder\\\\nDFKI-Lab Bremen\\\\nand Department of Computer Science, Universit at Bremen\\\\nDirk Pattinson\\\\nDepartment of Computing\\\\nImperial College London\\\\nMarch 15, 2019\\\\nAbstract\\\\nThe methods used to establish PSPACE -bounds for modal logics can roughly be grouped\\\\ninto two classes: syntax driven methods establish that exhaustive proof search can be\\\\nperformed in polynomial space whereas semantic approaches directly construct shallow\\\\nmodels. In this paper, we follow the latter approach and establish generic PSPACE bounds for a large and heterogeneous class of modal logics in a coalgebraic framework.\\\\nIn particular, no complete axiomatisation of the logic under scrutiny is needed. This\\\\ndoes not only complement our earlier, syntactic, approach conceptually, but also covers\\\\na wide variety of new examples which are difficult to harness by purely syntactic means.\\\\nApart from re-proving known complexity bounds for a large variety of structurally different\\\\nlogics, we apply our method to obtain previously unknown PSPACE -bounds for Elgesems\\\\nlogic of agency and for graded modal logic over reflexive frames.\\\\n\\\\n1\\\\n\\\\n",
    "Introduction": "Introduction\\\\n\\\\nSpecial purpose modal logics often combine expressivity and decidability, usually in a low\\\\ncomplexity class. In the absence of fixed point operators, these logics are frequently decidable\\\\nin PSPACE, i.e. not dramatically worse than propositional logic. While lower PSPACE\\\\nbounds for modal logics can typically be obtained directly from seminal results of Ladner [20]\\\\nby embedding a PSPACE-hard logic such as K or KD, upper bounds are often non-trivial to\\\\nestablish. In particular PSPACE upper bounds for non-normal logics have recently received\\\\nmuch attention:\\\\n A PSPACE upper bound for graded modal logic [11] is obtained using a constraint set\\\\nalgorithm in [30]. This corrects a previously published incorrect algorithm and refutes a\\\\nprevious EXPTIME hardness conjecture.\\\\n More recently, a P SP ACE upper bound for Presburger modal logic (which contains\\\\ngraded modal logic and majority logic [23]) has been established using a Ladner-type algorithm [6] .\\\\n Using a variant of a shallow neighbourhood frame construction from [31], a PSPACE\\\\nupper bound for coalition logic is established in [26].\\\\n PSPACE upper bounds for CK and related conditional logics [3] are obtained in [22] by\\\\na detailed proof-theoretic analysis of a labelled sequent calculus.\\\\n\\\\n\\\\fThe methods used to obtain these results can be broadly grouped into two classes. Syntactic approaches presuppose a complete tableaux or Gentzen system and establish that proof\\\\nsearch can be performed in polynomial space. Semantics-driven approaches, on the other\\\\nhand, directly construct shallow tree models. Both approaches are intimately connected in\\\\nthe case of normal modal logics interpreted over Kripke frames: counter models can usually\\\\nbe derived directly from search trees [16]. It should be noted that this method is not immediately applicable in the non-normal case, where the structure of models often goes far beyond\\\\nmere graphs.\\\\nUsing coalgebraic techniques, we have previously shown [29] that the syntactic approach\\\\nuniformly generalises to a large class of modal logics: starting from a one-step complete axiomatisation, we have applied resolution closure to obtain complete tableaux systems. Generic\\\\nPSPACE-bounds follow if the ensuing rule set is PSPACE-tractable. Here, we present a different, semantic, set of methods to establish uniform PSPACE bounds by directly constructing\\\\nshallow models for logics subject to the one-step polysize model property, or a variant of the\\\\nlatter. In particular, no axiomatisation of the logic itself is needed.\\\\nApart from the fact that both methods use substantially different techniques, they apply\\\\nto different classes of examples. While it is e.g. relatively easy to obtain a resolution closed rule\\\\nset for coalition logic [26], proving the one-step polysize model property for (the coalgebraic\\\\nsemantics of) coalition logic is a non-trivial task. On the other hand, small one-step models\\\\nare comparatively easy to construct for complex modal logics such as probabilistic modal\\\\nlogic [8] or Presburger modal logic [6] that are not straightforwardly amenable to the syntactic\\\\napproach via resolution closure, either because no axiomatisation has been given or because\\\\nthe complexity of the axiomatisation makes the resolution closure hard to harness.\\\\nMoreover, the present semantic approach to PSPACE-bounds takes a significant step to\\\\novercome an important barrier in the coalgebraic treatment of modal logics. Existing decidability and completeness results [25, 5, 28, 29] are limited to rank-1 logics, given by axioms\\\\nwhose modal nesting depth is uniformly equal to one. While this already encompasses a large\\\\nclass of examples (including all logics mentioned so far), the semantic model construction in\\\\nthe present paper applies to non-iterative logics [21], i.e. logics axiomatised without nested\\\\nmodalities (rank-1 logics additionally exclude top-level propositional variables). Despite the\\\\nseemingly minute difference between the two classes of logics, this generalisation is not only\\\\ntechnically non-trivial but also substantially extends the scope of the coalgebraic method.\\\\nBesides the modal logic T , the class of non-iterative logics includes e.g. all conditional logics\\\\ncovered in [22] (of which only 4 are rank-1), in particular CK +MP [3], as well as Elgesems\\\\nlogic of agency [7, 12] and the graded version T n of T [11].\\\\nAs in [29], we work in the framework of coalgebraic modal logic [25] to obtain results that\\\\nare parametric in the underlying semantics of particular logics. While normal modal logics\\\\nare usually interpreted over Kripke frames, non-normal logics see a large variety of different\\\\nsemantics, e.g. probabilistic systems [8], frames with ordered branching [6], game frames [26],\\\\nor conditional frames [3]. The coalgebraic treatment allows us to encapsulate the semantics\\\\nin the choice of a signature functor, whose coalgebras then play the role of models, leading to\\\\nresults that are unformly applicable to a large class of different logics.\\\\nSince the class of all coalgebras for a given signature functor can always be completely\\\\naxiomatised in rank 1 [28], in analogy to the fact that the K-axioms are complete for the\\\\nclass of all Kripke frames, the standard coalgebraic approach is not directly applicable to noniterative logics. To overcome this limitation, we introduce the new concept of interpreting\\\\nmodal logics over coalgebras for copointed functors, i.e. functors T equipped with a natural\\\\n2\\\\n\\\\n\\\\ftransformation of type T  Id .\\\\nIn this setting, our main technical tool is to cut back model constructions from modal\\\\nlogics to the level of one-step logics which semantically do not involve state transitions, and\\\\nthen amalgamate the corresponding one-step models into shallow models for the full modal\\\\nlogic, which ideally can be traversed in polynomial space. For this approach to work, the\\\\nlogic at hand needs to support a small model property for its one-step fragment, the one-step\\\\npolysize model property (OSPMP). Our first main theorem shows that the OSPMP guarantees\\\\ndecidability in polynomial space. Crucially, the OSPMP is much easier to establish than a\\\\nshallow model property for the logic itself. To reprove e.g. Ladners PSPACE upper bound\\\\nfor K, one just observes that to construct a set that intersects n given sets, one needs at most\\\\nn elements. For the conditional logics CK , CK +ID , and CK +MP, the OSPMP is similarly\\\\neasy to check. For other logics, in particular various logics of quantitative uncertainty, the\\\\nOSPMP can be obtained by sharpening known off-the-shelf results. As a new result, we\\\\nestablish the OSPMP for Elgesems logic of agency to obtain a previously unknown PSPACE\\\\nupper bound.\\\\nAs a by-product of our construction, we obtain NP-bounds for the bounded rank fragments\\\\nof all logics with the OSPMP, generalizing the corresponding result for the logics K and T\\\\nfrom [13] to a large variety of structurally different (non-iterative) logics.\\\\nWhile the OSPMP is usually easy to establish, a weaker property, the one-step pointwise\\\\npolysize model property (OSPPMP), can be used in cases where the OSPMP fails, provided\\\\nthat the signature functor supports a notion of pointwise smallness for overall exponentialsized one-step models. This allows traversing exponentially branching shallow models in\\\\npolynomial space by dealing with the successor structures of single states in a pointwise\\\\nfashion. Our second main result, which yields PSPACE upper bounds for logics with the\\\\nOSPPMP, is applied to reprove the known PSPACE bound for Presburger modal logic [6]\\\\nand to derive a new PSPACE bound for Presburger modal logic over reflexive frames, and\\\\nhence for T n [11] (which was so far only known to be decidable [10]). The latter result extends\\\\nstraightforwardly to a description logic with role hierarchies, qualified number restrictions,\\\\nand reflexive roles.\\\\n\\\\n2\\\\n\\\\nCoalgebraic Modal Logic\\\\n\\\\nWe recall the coalgebraic interpretation of modal logic and extend it to non-iterative logics\\\\nusing copointed functors.\\\\nA modal signature  is a set of modal operators with associated finite arity. The signature\\\\n determines two languages: firstly, the one-step logic of , whose formulas , . . . (the onestep formulas) over a set V of propositional variables are defined by the grammar\\\\n ::=  | 1  2 |  | L(1 , . . . , n ),\\\\nwhere L   is n-ary and the i are propositional formulas over V ; and secondly, the modal\\\\nlogic of , whose set F() of -formulas , . . . is defined by the grammar\\\\n ::=  | 1  2 |  | L(1 , . . . , n ).\\\\nThus, the modal logic of  is distinguished from the one-step logic in that it admits nested\\\\nmodalities. The boolean operations , , ,  are defined as usual. The rank rank()\\\\n3\\\\n\\\\n\\\\fof   F() is the maximal nesting depth of modalities in  (note however that the notion\\\\nof rank-1 logic [28, 29] is stricter than suggested by this definition, as it excludes top-level\\\\npropositional variables in axioms; the latter are allowed only in non-iterative logics). We\\\\ndenote by Fn () the set of formulas of rank at most n; we refer to the languages Fn () as\\\\nbounded-rank fragments.\\\\nWe treat one-step logics as a technical tool in the study of modal logics. However, onestep logics also appear as logics of independent interest in the literature [9, 14, 15]. One of\\\\nthe central ideas of coalgebraic modal logic is that properties of the full modal logic, such as\\\\nsoundness, completeness, and decidability, can be reduced to properties of the much simpler\\\\none-step logic. This is also the spirit of the present work, whose core is a construction of\\\\npolynomially branching shallow models for the modal logic assuming a small model property\\\\nfor the one-step logic.\\\\nThe semantics of both the one-step logic and the modal logic of  are parametrized\\\\ncoalgebraically by the choice of a set functor. The standard setup of coalgebraic modal logic\\\\nusing all coalgebras for a plain set functor covers only rank-1 logics, i.e. logics axiomatised\\\\none-step formulas [28] (a typical example is the K-axiom \\\\u0003(a  b)  \\\\u0003a  \\\\u0003b). Here, we\\\\nimprove on this by considering the class of coalgebras for a given copointed set functor, which\\\\nenables us to cover the more general class of non-iterative logics, axiomatised by arbitrary\\\\nformulas without nested modalities (such as the T -axiom \\\\u0003a  a). We follow a purely\\\\nsemantic approach and hence do not formally consider axiomatisations in the present work\\\\n(where we do mention axioms, this is for solely explanatory purposes). However, the extended\\\\nscope of the new framework and its relation to non-iterative modal logics (which can be made\\\\nprecise in the same way as for plain functors and rank-1 logics [28]) will become clear in the\\\\nexamples.\\\\nIn general, a copointed functor (T, o) consists of a functor T : Set  Set, where Set is\\\\nthe category of sets, and a natural transformation o : T  Id . For our present purposes, a\\\\nslightly restricted notion is more convenient:\\\\nDefinition 2.1. A (restricted) copointed functor S with signature functor S0 : Set  Set is\\\\na subfunctor of S0  Id (where (S0  Id )X = S0 X  X). We say that S is trivially copointed\\\\nif S = S0  Id . An S-coalgebra A = (X, ) consists of a set X of states and a transition\\\\nfunction  : X  S0 X such that ((x), x)  SX for all x.\\\\nRemark 2.2. The modal logic F() does not explicitly include propositional variables. These\\\\nmay be regarded as nullary modal operators in ; their semantics is then defined over coalgebras for S0  P(V ), where V is the set of variables (cf. also e.g. [28]). We omit discussion\\\\nof propositional variables in the examples, even in cases like the modal logic of probability\\\\nthat become trivial in the absence of variables; our treatment extends straightforwardly to\\\\nthe case with variables in the manner just indicated.\\\\nWe view coalgebras as generalized transition systems: the transition function maps a state\\\\nto a structured set of successors and observations, with the structure prescribed by the signature functor. Thus, the latter encapsulates the branching type of the underlying transition\\\\nsystems. Copointed functors additionally impose local frame conditions that relate a state to\\\\nthe collection of its successors.\\\\nAssumption 2.3. We assume w.l.o.g. that S0 preserves injective maps [2], and even S0 X \\\\nS0 Y in case X  Y , and that S is non-trivial, i.e. SX =   X = .\\\\n4\\\\n\\\\n\\\\fGeneralising earlier work (e.g. [17, 19]), coalgebraic modal logic abstractly captures the interpretation of modal operators as polyadic predicate liftings [25, 27],\\\\nDefinition 2.4. An n-ary predicate lifting (n  N) for S0 is a natural transformation\\\\n : Qn  Q  S0op ,\\\\nwhere Q denotes the contravariant powerset functor Setop  Set (i.e. QX is the powerset\\\\nP(X), and Qf (A) = f 1 [A]), and Qn is defined by Qn X = (QX)n .\\\\nA coalgebraic semantics for  is formally defined as a -structure M (over S) consisting of\\\\na copointed functor S with signature functor S0 and an assignment of an n-ary predicate\\\\nlifting [[L]] for S0 to every n-ary modal operator L  . When S is trivially copointed, we\\\\nwill also call M a simple -structure (over S0 ). We fix the notation , M, S, S0 throughout\\\\nthe paper. The semantics of the modal language F() is then given in terms of a satisfaction\\\\nrelation |=C between states x of S-coalgebras C = (X, ) and F()-formulas over V . The\\\\nrelation |=C is defined inductively, with the usual clauses for boolean operators. The clause\\\\nfor an n-ary modal operator L is\\\\nx |=C L(1 , . . . , n )  (x)  [[L]]([[1 ]]C , . . . , [[n ]]C )\\\\nwhere [[]]C = {x  X | x |=C }. We drop the subscripts C when clear from the context.\\\\nOur main interest is in the (local) satisfiability problem over M:\\\\nDefinition 2.5. An F()-formula  is satisfiable if there exist an S-coalgebra C and a state\\\\nx in C such that x |=C . Dually,  is valid if x |=C  for all C, x.\\\\nContrastingly, the semantics of the one-step logic is given in terms of satisfaction relations\\\\n|=1X, between elements t  S0 X and one-step formulas over V , where X is a set and  is\\\\na P(X)-valuation for V , i.e. a map  : V  P(X). The valuation  canonically induces\\\\nan interpretation of [[]]0   X of propositional formulas  over V . We write X,  |=0  if\\\\n[[]]0  = X. The relation |=1X, is then defined by the usual clauses for boolean operators, and\\\\nt |=1X, L(1 , . . . , n )  t  [[L]]([[1 ]]0 , . . . , [[n ]]0  ).\\\\nNote in particular that the semantics of the one-step logic does not involve a notion of state\\\\ntransition.\\\\nDefinition 2.6. A one-step model (X, , t, x) over V consists of a set X, a P(X)-valuation\\\\n for V , t  S0 X, and x  X such that (t, x)  SX. The latter condition is vacuous if S is\\\\ntrivially copointed, in which case we omit the mention of x. For a one-step formula  over\\\\nV , (X, , t, x) is a one-step model of  if t |=1X, .\\\\nWe recall some basic notation:\\\\nDefinition 2.7. We denote the set of propositional formulas over a set Z, generated by the\\\\nbasic connectives  and , by Prop(Z). We use variables o etc. to denote either nothing or\\\\n. Thus, a literal over Z is a formula of the form oa, with a  Z. A (conjunctive) clause\\\\nis a finite, possibly empty, disjunction (conjunction) of literals. We denote by (Z) the set\\\\n{L(a1 , . . . , an ) | L   n-ary, a1 , . . . , an  Z}.\\\\n5\\\\n\\\\n\\\\fIn the above notation, the set of one-step formulas over V is Prop((Prop(V ))). The one-step\\\\nlogic may alternatively be presented in terms of pairs of formulas separating out the lower\\\\npropositional layer:\\\\nDefinition 2.8. A one-step pair (, ) over V consists of formulas   Prop((V )) and\\\\n  Prop(V ). A one-step model (X, , t, x) is a one-step model of (, ) if X,  |=0  and\\\\nt |=1X, .\\\\nIn analogy to the equivalence between axioms and one-step rules described in [28], one-step\\\\npairs and one-step formulas may replace each other for purposes of satisfiability:\\\\nLemma 2.9. For every one-step pair (, ) over V with  satisfiable, there exists a Prop(V )substitution  such that the one-step formula  is equivalent to (, ) in the sense that if\\\\nt |=1X,  then t |=1X, (, ), and if t |=1X, (, ) then t |=1X,  (and  =  ). Here, \\\\ndenotes the P(X)-valuation taking a to [[(a)]]0  .\\\\nConversely, we have, for   Prop((Prop(V ))), an equivalent one-step pair (, 1 ) over\\\\nV  W , where  decomposes as   1 , with 1  Prop((W )),  a Prop(V )-substitution,\\\\nand V  W = , and where  is the conjunction of the formulas a  (a), a  W . Here,\\\\nrestricting valuations to V induces a bijection between one-step models of (, 1 ) and one-step\\\\nmodels of .\\\\nProof. The second claim is clear. The first claim is proved as follows. As in [28], let  be\\\\na satisfying truth valuation for  and put (a) = a   if (a) = , and (a) =   a\\\\notherwise. Then  and the formulas   (a  (a)), for a  V , are tautologies [28]. Both\\\\ndirections of the first claim now follow straightforwardly.\\\\nThe coalgebraic approach subsumes many interesting modal logics, including e.g. graded and\\\\nprobabilistic modal logics and coalition logic [29]. Below, we present the most basic examples,\\\\nthe modal logics K and T , as well as various conditional logics and logics of quantitative\\\\nuncertainty. The treatment of Elgesems modal logic of agency is deferred to Sect. 4.\\\\nExample 2.10. 1. Modal logic K: Let  = {\\\\u0003}, with \\\\u0003 a unary modal operator. We\\\\ndefine a simple -structure over the covariant powerset functor P (i.e. PX is powerset, and\\\\nPf (A) = f [A]) by putting [[\\\\u0003]]X (A) = {B  PX | B  A}. Naturality of [[\\\\u0003]] is just the\\\\nequivalence f [B]  A  B  f 1 [A].\\\\nP-coalgebras are Kripke frames, and P-models are Kripke models. The modal logic of \\\\nis precisely the modal logic K, equipped with its standard Kripke semantics. Contrastingly,\\\\na one-step formula over V is a propositional combination of atoms of the form \\\\u0003, where\\\\n  Prop(V ). For A  PX, we have A |=1X, \\\\u0003 iff A  [[]]0  . One easily checks that the\\\\none-step logic is NP-complete, while the modal logic K is PSPACE-complete [20].\\\\n2. Modal logic T : The logic T has the same syntax as K. Its coalgebraic semantics is a\\\\nstructure over the copointed functor R with signature functor P, given by\\\\nRX = {(A, x)  PX  X | x  A}.\\\\nThus, R-coalgebras are reflexive Kripke frames. The interpretation of \\\\u0003 is defined as for K.\\\\n(Axiomatically, T is determined by the non-iterative axiom \\\\u0003a  a.)\\\\n6\\\\n\\\\n\\\\f3. Conditional logic CK : The signature of conditional logic has a single binary modal operator , written in infix notation. Formulas    are read as non-monotonic conditionals.\\\\nThe semantics of the conditional logic CK [3] is given by a simple structure over the functor\\\\nCf given by Cf (X) = (QX  PX), with  denoting function space and Q contravariant\\\\npowerset, cf. Definition 2.4. Cf -coalgebras are conditional frames [3]. The operator  is\\\\ninterpreted over Cf by\\\\n[[]]X (A, B) = {f : QX  PX | f (A)  B}.\\\\n4. Conditional logic CK+ID: The conditional logic CK+ID [3] extends CK with the rank-1\\\\naxiom a  a, referred to as ID. The semantics of CK + ID is modelled by restricting the\\\\nstructure for CK to the subfunctor CfID of Cf defined by\\\\nCfID (X) = {f  Cf (X) | A  QX. f (A)  A}.\\\\n5. Conditional Logic CK +MP: The logic CK +MP [3] extends CK with the non-iterative\\\\naxiom\\\\n(MP ) (a  b)  (a  b).\\\\n(This axiom is undesirable in default logics, but reasonable in relevance logics.) Semantically,\\\\nthis amounts to passing from the functor Cf to the copointed functor CfMP with signature\\\\nfunctor Cf , defined by\\\\nCfMP (X) = {(f, x)  Cf (X)  X | A  X. x  A  x  f (A)}.\\\\n6. Modal logicsP\\\\nof quantitative uncertainty: The modal signature of likelihood has n-ary\\\\nmodal operators ni=1 ai l( )  b for a1 , . . . , a1 , b  Q. The terms l() are called likelihoods.\\\\nThe interpretation of likelihoods varies. E.g. the semantics of the modal logic of probability [8] is modelled coalgebraically by a structure over the (finite) distribution functor D ,\\\\nwhere D X is the set of finitely supported probability distributions on X, and D f acts as\\\\nimage measure formation. Coalgebras for D are probabilistic transition systems (i.e. Markov\\\\nchains). Likelihoods are interpreted as probabilities; i.e.\\\\nP\\\\nP\\\\n[[ ni=1 ai  l( )  b]]X (A1 , . . . , An ) = {P  D X | ni=1 ai P (Ai )  b}.\\\\nAlternatively, likelihoods may be interpreted as upper probabilities [14], i.e. the functor D\\\\nis replaced by P  D , and in the above definition, P (Ai ) is replaced by P (Ai ), where for\\\\nP  PD X, P (A) = sup {P A | P  P}. This setting describes situations where agents\\\\nare unsure about the actual probability distribution. Further alternative notions of likelihood\\\\ninclude Dempster-Shafer belief functions and Dubois-Prade possibility measures [15]. An\\\\nextension of the modal signature of likelihood is the modal signature of\\\\n[15],\\\\nPnexpectation\\\\nk\\\\nwhere instead of likelihoods one more generally considers expectations e( j=1 bij ij ). Here,\\\\nlinear combinations of formulas represent gambles, i.e. real-valued outcome functions, where\\\\nthe payoff of  is the characteristic function of . The exact definition of expectation depends\\\\non the underlying notion of likelihood.\\\\nOne-step logics of quantitative uncertainty are often considered to be of independent interest. E.g. the one-step logic of probability, i.e. a logic without nesting of likelihoods that\\\\ntalks only about a single probability distribution, is introduced independently [9] and only\\\\nlater extended to a full modal logic [8]. In fact, logics of expectation [15] and the logic of\\\\nupper probability [14] so far appear in the literature only as one-step logics; the corresponding\\\\nmodal logics are of interest as natural variations of the modal logic of probability.\\\\n7\\\\n\\\\n\\\\fConvention 2.11. We assume that  is equipped with a size measure, thus inducing a size\\\\nmeasure for F(). For one-step formulas  over V , we assume w.l.o.g. that |V |  size(). For\\\\nfinite X, we assume given a representation of elements (t, x)  SX as strings of size size(t, x)\\\\nover some finite alphabet. We do not require that all elements of SX are representable, nor\\\\nthat all strings denote elements of SX. When S is trivially copointed, we represent only\\\\nt  S0 (X). We require that inclusions SX  SY induced according to Assumption 2.3 by\\\\ninclusions X  Y into a finite base set Y preserve representable elements and increase their\\\\nsize by at most log |Y |.\\\\nWe make these issues explicit for the above examples:\\\\nExample 2.12. 1. Modal logics K and T : For X finite, elements of PX are represented\\\\nas lists of elements of X.\\\\n2. Conditional logics CK and CK+ID: For X finite, elements of QX  PX are represented\\\\nas partial maps f0 : QX  PX; such an f0 represents the total map f that extends f0 by\\\\nf (A) =  when f0 (A) is undefined. (The use of partial maps avoids exponential blowup.)\\\\n3. Conditional logic CK + MP : For X finite, a pair (f0 , x) consisting of a partial map\\\\nf0 : QX  PX and x  X represents the pair (f, x), where f : QX  PX extends f0 by\\\\nf (A) = A  {x} in case f0 (A) is undefined.\\\\n4. Modal logics of quantitative uncertainty: Suitable compact representations are described\\\\nin [9, 14, 15].\\\\n\\\\n3\\\\n\\\\nPolynomially branching shallow models\\\\n\\\\nWe now turn to the announced construction of polynomially branching shallow models for\\\\nmodal logics whose one-step logic has a small model property; this construction leads to a\\\\nPSPACE decision procedure.\\\\nDefinition 3.1. We say that M has the one-step polysize model property (OSPMP) if there\\\\nexist polynomials p and q such that, whenever a one-step pair (, ) over V has a one-step\\\\nmodel (X, , t, x), then it has a one-step model (Y, , s, y) such that |Y |  p(||), (s, y) is\\\\nrepresentable with size(s, y)  q(||), and y  (a) iff x   (a) for all a  V .\\\\nIn analogy to the transition between rules and axioms described in [28], one-step pairs are\\\\ninterchangeable with one-step formulas. In particular, we have\\\\nProposition 3.2. The -structure M has the OSPMP iff there exist polynomials p, q such\\\\nthat, whenever a one-step formula  over V has a one-step model (X, , t, x), then it has a\\\\none-step model (Y, , s, y) such that y  (a) iff x   (a) for all a  V , |Y |  p(|1 |), and\\\\n(s, y) is representable with size(s, y)  q(|1 |), where   1  with 1  Prop((W )) and \\\\na Prop(V )-substitution.\\\\nProof. Only if: Let (X, , t, x) be a one-step model of a one-step formula  over V . By\\\\nLemma 2.9,  is equivalent to a one-step pair of the form (, 1 ), with 1 as in the statement.\\\\nBy the OSPMP, (, 1 ) has a one-step model (Y, , s, y) such that |Y |  p(|1 |), size(s, y) \\\\nq(|1 |), and y  (a) iff x   (a) for all a  V ; by Lemma 2.9, this model gives rise to a\\\\none-step model of  with the components Y , s, y unchanged.\\\\n8\\\\n\\\\n\\\\fIf: Let (X, , t, x) be a one-step model of a one-step pair (, ) over V . By Lemma 2.9,\\\\n(, ) is equivalent to a one-step formula of the form , where  is a Prop(V )-substitution.\\\\nBy assumption,  has a one-step model (Y, , s, y) such that |Y |  p(||), size(s, y)  q(||),\\\\nand y  (a) iff x   (a) for all a  V . By Lemma 2.9, this model gives rise to a one-step\\\\nmodel of (, ) with the components Y , s, y unchanged.\\\\nBoth formulations of the OSPMP easily reduce to the case that  is a conjunctive clause.\\\\nRemark 3.3. It is shown in [28] that the one-step logic always has an exponential-size model\\\\nproperty: a one-step formula  over V has a one-step model iff it has a one-step model with\\\\ncarrier set P(V ).\\\\nWe are now ready to prove the shallow model theorem.\\\\nDefinition 3.4. A supporting Kripke frame of an S-coalgebra (X, ) is a Kripke frame (X, R)\\\\nsuch that for each x  X,\\\\n(x)  S0 {y | xRy}  S0 X\\\\n(equivalently ((x), x)  S{y | xRy}). A state x  X is a loop if xRx.\\\\nTheorem 3.5 (Shallow model property). If M has the OSPMP, then F() has the polynomially branching shallow model property: There exist polynomials p, q such that every\\\\nsatisfiable F()-formula  is satisfiable at the root of an S-coalgebra (X, ) which has a supporting Kripke frame (X, R) such that removing all loops from (X, R) yields a tree of depth at\\\\nmost rank() and branching degree at most p(||), and ((x), x)  S{y | xRy} is representable\\\\nwith size((x), x)  q(||).\\\\nDefinition 3.6. For x  X and a P(X)-valuation  , we put Th (x) \\\\n\\\\nV\\\\n\\\\nx (a) a \\\\n\\\\nV\\\\n\\\\nx\\\\n/ (a)\\\\n\\\\na.\\\\n\\\\nProof of Theorem 3.5. Induction over the rank of . If rank() = 0, then  evaluates to \\\\nand hence is satisfied in a singleton S-coalgebra (X, ), which exists by Assumption 2.3.\\\\nNow let rank() = n + 1. Let z0 be a state in an S-coalgebra (Z, ) such that z0 |=(Z,) .\\\\nLet MSub() denote the set of subformulas of  occuring in  within the scope of a modal\\\\noperator, let V be the set of variables a , indexed over   MSub(), and let  denote the\\\\nsubstitution taking a to  for all . Let   be the conjunction of all literals oL(a1 , . . . , an )\\\\nsuch that L(1 , . . . , n ) is a subformula of  and z0 |=(Z,) oL(1 , . . . , n ). (Recall that o\\\\ndenotes either nothing or negation.) Moreover, let  denote the propositional theory of , i.e.\\\\nthe conjunction of all clauses  over V such that  is L-valid.\\\\n  where (a) = [[(a)]]\\\\nThen (Z, , (z0 ), z0 ) is a one-step model of (, ),\\\\n(Z,) . By the\\\\n \\\\n  such\\\\nOSPMP, it follows that (, ) has a one-step model (Y, , t, x0 ) of polynomial size in ||\\\\nthat for all   MSub(1 ), x0   (a ) iff z0  (), which in turn is equivalent to z0 |=(Z,) .\\\\nFrom this model, we now construct a shallow model (X, ) for . To begin, note that\\\\nTh (y) is L-satisfiable for every y  Y . For suppose not; then Th (y) is L-valid, hence\\\\nTh (y) is a conjunct of . Thus, Y,  |=0 Th (y), in contradiction to the fact that y \\\\n[[Th (y)]] by construction. By induction, we thus have, for every y  Y , a shallow model\\\\n(Xy , y ) of Th (y), where we may assume y  Xy and y |=(Xy ,y ) Th (y), with depth at most\\\\nrank(Th (y)) = n. We take (X, ) as the disjoint union of the (Xy , y ) over y  Y  {x0 },\\\\nextended by the state x0 , for which we put (x0 ) = t  S0 Y  S0 X.\\\\n9\\\\n\\\\n\\\\f \\\\nWe have to verify that x0 |=(X,) . We will prove the stronger statement x0 |=(X,) ,\\\\ni.e.\\\\n \\\\nt |=1X, ,\\\\n\\\\n(1)\\\\n\\\\nwhere (a ) = [[]](X,) for   MSub().\\\\nBy induction over  and naturality of predicate liftings, y |=(X,)  iff y |=(Xy ,y )  for\\\\ny  Y  {x0 } and for every formul",
    "Related Work": "a . In particular, y |=(X,) Th (y) for all y  Y  {x0 },\\\\ni.e.\\\\ny |=(X,)   y   (a )\\\\n(2)\\\\nfor all   MSub(). We prove by induction over   MSub() that\\\\nx0 |=(X,)   x0   (a ),\\\\n\\\\n(3)\\\\n\\\\nwhich in connection with (2) yields\\\\n[[]](X,)  Y =  (a ).\\\\n\\\\n(4)\\\\n\\\\nThe steps for boolean operations are straightforward. For L(1 , . . . , n )  MSub(), we have\\\\nx0 |=(X,) L(1 , . . . , n )\\\\n t  [[L]]Y ([[i ]](X,)  Y )i=1,...,n = [[L]]Y ( (a1 ), . . . ,  (an ))\\\\n t |=1(Y, ) L(a1 , . . . , an ),\\\\nusing naturality of [[L]] in the first step and the inductive hypothesis in the shape of (4)\\\\n  the last statement is equivalent to z0 |=(Z,)\\\\nin the subsequent equality. Since t |=(Y, ) ,\\\\nL(1 , . . . , n ). By the definition of , this is equivalent to z0  (aL(1 ,...,n ) ), which in turn\\\\nis equivalent to x0   (aL(1 ,...,n ) ) by construction of (Y, , t, x0 ).\\\\n \\\\nBy (4) and naturality of predicate liftings, our remaining goal (1) reduces to t |=1Y, ,\\\\nwhich holds by construction.\\\\nFinally, we have to establish that the overall branching degree of the model is polynomial in ||. The model is recursively constructed from polynomial-size one-step models for\\\\npairs whose second components are conjunctive clauses over atoms L(a1 , . . . , an ), where\\\\nL(1 , . . . , n ) is a subformula of . Such conjunctive clauses are of at most quadratic size in\\\\n|| (even O(|| log ||) if subformulas of  are represented by pointers into ); this proves\\\\nthe claim.\\\\nRemark 3.7. While it is to be expected that the construction of polynomially branching\\\\nmodels depends on a condition like the OSPMP, it does not seem to be the case that the\\\\nprecise formulation of this condition is implicit in the literature (not even for the trivially\\\\ncopointed case). Note in particular that the polynomial bound depends only on the second\\\\ncomponent of a one-step pair. This is crucial, as the first component of the one-step pair\\\\nconstructed in the above proof may be of exponential size. When we say in the introduction\\\\nthat the OSPMP can be obtained from off-the-shelf results (e.g. [9, 14, 15]), we refer to\\\\npolynomial-size model theorems in which the polynomial bound depends, in the notation\\\\nof Proposition 3.2, on ||, which may be exponentially larger than |1 |; typically, only an\\\\ninspection of the given proofs shows that the bound can be sharpened to be polynomial in |1 |.\\\\nThe proof of Theorem 3.5 leads to the following nondeterministic decision procedure.\\\\n10\\\\n\\\\n\\\\fAlgorithm 3.8. (Decide satisfiability of an F()-formula ) Let M have the OSPMP, and\\\\nlet p, q be polynomial bounds as in Definition 3.1.\\\\n1. If rank() = 0, terminate successfully if  evaluates to , else unsuccessfully. Otherwise:\\\\n2. Take V and  as in the proof of Theorem 3.5, and guess a conjunctive clause   over (V )\\\\ncontaining for each subformula L(1 , . . . , n ) of  either L(a1 , . . . , an ) or L(a1 , . . . , an )\\\\n  propositionally entails .\\\\nsuch that \\\\n  where Y =\\\\n3. Guess a P(Y )-valuation  for V and (t, x)  SY with size(t, x)  q(||),\\\\n1\\\\n \\\\n \\\\n{1, . . . , p(||)}, such that t |=Y, .\\\\n4. For each y  Y , check recursively that Th (y) is satisfiable.\\\\nSince the rank decreases with each recursive call, the above algorithm can be implemented in\\\\npolynomial space, provided that Step 3 can be performed in polynomial space.\\\\nDefinition 3.9. The one-step model checking problem is to check, given a string s, a finite\\\\nset X, A1 , . . . , An  X, and L   n-ary, whether s represents some (t, x)  SX and whether\\\\nt  [[L]]X (A1 , . . . , An ).\\\\nThis property and the above algorithm lead to a PSPACE bound for the modal logic. Moreover, for bounded-rank fragments, the polynomially branching shallow model property becomes a polynomial size model property, thus leading to an NP upper bound:\\\\nCorollary 3.10. Let M have the OSPMP.\\\\n1. If one-step model checking is in PSPACE, then the satisfiability problem of F() is in\\\\nPSPACE.\\\\n2. If one-step model checking is in P , then the satisfiability problem of Fn () is in NP for\\\\nevery n  N.\\\\n\\\\nProof. 1: By Algorithm 3.8.\\\\n2: Let p and q be polynomial bounds on the branching degree of supporting Kripke frames\\\\nand on the size of successor structures (x) as guaranteed by Theorem 3.5. Let n  N. Then\\\\nby TheoremP3.5, every satisfiable formula   Fn () is satisfiable in a model (X, ) such\\\\nthat |X|  ni=0 p(||)i =: N and size((x))  log(N )q(||) for all x  X, where the second\\\\ninequality relies also on Convention 2.11. Thus, the entire representation size of the model\\\\n(X, ) is bounded by M := N log(N )q(||), which is polynomial in ||. Thus, the following\\\\nnon-deterministic algorithm decides satisfiability of  in polynomial time:\\\\n1. Guess a model (X, ) of size at most M\\\\n2. Check that (X, ) is an S-coalgebra.\\\\n3. Check that [[]](X,) 6= .\\\\nThe second step can be performed in polynomial time because one-step model checking is in\\\\nP . The third step can be performed in polynomial time by recursively computing extensions\\\\n[[]](X,) , again because one-step model checking is in P .\\\\nThis generalises results for the modal logics K and T established in [13].\\\\n11\\\\n\\\\n\\\\fExample 3.11. 1. Modal logics K and T : One-step model checking for K and T amounts\\\\nto checking a subset inclusion and, in the case of T , additionally an elementhood; this is\\\\nclearly in P . To verify the OSPMP for K, let (X, , A) be a one-step model of a one-step\\\\npair (, ) over V ; w.l.o.g.  is a conjunctive clause over atoms \\\\u0003a, where a  V . For \\\\u0003a\\\\nin , there exists xa  A such that xa \\\\n/  (a). Taking Y to be the set of these xa , we\\\\nobtain a polynomial-size one-step model (Y, Y , Y ) of (, ), where Y (a) =  (a)  Y for all\\\\na. The construction for T is the same, except that the point x of the original one-step model\\\\n(X, , A, x) is retained in the carrier set Y , and becomes the point of the small model. By\\\\nCorollary 3.10, this reproves Ladners PSPACE upper bounds for K and T [20], as well as\\\\nHalperns NP upper bounds for bounded-rank fragments [13].\\\\n2. Conditional logic: It is easy to see that one-step model checking for CK , CK +ID, and\\\\nCK + MP is in P . (In particular, deciding whether a given string represents an element of\\\\nCfID (X) just amounts to checking subset inclusions. Moreover, deciding whether (f, x) \\\\nCfMP (X), i.e. whether x  A implies x  f (A), can be done in polynomial time thanks to\\\\nthe choice of default value for f ; cf. Example 2.12.2.)\\\\nTo prove that CK has the OSPMP, let (X, ,V\\\\nf ) be a one-step model of a one-step pair\\\\n(, ), where w.l.o.g.  is a conjunctive clause ni=1 oi (ai  bi ). If  (ai ) 6=  (aj ), fix an\\\\nelement yij in the symmetric difference of  (ai ) and  (aj ). Moreover, if oi is negation, fix\\\\nzi  f ( (ai )) \\\\\\\\  (bi ). Let Y be the set of all yij and all zi . Let Y be the P(Y )-valuation\\\\ndefined by Y (v) =  (v)  Y , and let fY  Cf (Y ) be represented by the partial map taking\\\\nY (ai ) to f ( (ai ))  Y for all i (this is well-defined by construction of Y ). Then (Y, Y , fY )\\\\nis a one-step model of (, ). The cardinality of Y is quadradic in , and the representation\\\\nsize of fY is polynomial.\\\\nThanks to the choice of default value, this construction of polynomial-size one-step models\\\\nworks also for CK+ID. The construction for CK+MP is almost identical, except that the point\\\\nx of (X, , f, x) is retained in the small one-step model (Y, Y , fY , x); here, (fY , x)  CfMP (Y )\\\\ndue to the different choice of default value.\\\\nWe thus obtain that CK , CK+ID, and CK+MP are in PSPACE (hence PSPACE-complete,\\\\nas these logics contain K and  in the case of CK +MP T , respectively, as sublogics). This\\\\nhas previously been proved using a detailed analysis of a labelled sequent calculus [22] (the\\\\nmethod of [22] yields an explicit polynomial bound on space usage which is not matched by\\\\nthe generic algorithm). The NP upper bound for bounded-rank fragments of CK , CK +ID,\\\\nand CK +MP arising from Corollary 3.10.2 is, to our knowledge, new.\\\\n3. Modal logics of quantitative uncertainty: Polynomial size model properties for one-step\\\\nlogics have been proved for the logic of probability [9], the logic of upper probability [14], and\\\\nvarious logics of expectation [15]. As indicated in Remark 3.7, the polynomial bounds are\\\\nstated in the cited work as depending on the size of the entire one-step formula ; however,\\\\ninspection of the given proofs shows that the polynomial bound in fact depends only on the\\\\nnumber of likelihoods or expectations in , respectively, and on the representation size of the\\\\nlargest coefficient. By Proposition 3.2, it follows that the respective logics have the OSPMP.\\\\nSuitable complexity estimates for one-step model checking are also found in the cited work.\\\\nBy the above results, it follows that the respective modal logics of quantitative uncertainty\\\\nare in PSPACE (hence PSPACE-complete, as one can embed KD by mapping  to l( ) > 0),\\\\nand in NP when the modal nesting depth is bounded. For the modal logic of probability, a\\\\nproof of the PSPACE upper bound is sketched in [8]. The PSPACE upper bounds for the\\\\nremaining cases (e.g. the modal logic of upper probability and the various modal logics of\\\\n\\\\n12\\\\n\\\\n\\\\fexpectation) seem to be new, if only for the reason that only the one-step versions of these\\\\nlogics appear in the literature. Similarly, all NP upper bounds for bounded-rank fragments\\\\nare, to our knowledge, new. Moreover, the upper bounds extend easily to modal logics of\\\\nuncertainty with non-iterative axioms, e.g. an axiom a  l(a)  p which states that the\\\\npresent state remains stationary with likelihood at least p.\\\\n\\\\n4\\\\n\\\\nExtended Example: Elgesems modal logic of agency\\\\n\\\\nThere have been numerous approaches to capturing the notion of agents bringing about\\\\ncertain states of affairs, one of the most recent ones being Elgesems modal logic of agency\\\\n([7] and references therein, [12]). Modal logics of agency play a role e.g. in planning and task\\\\nassignment in multi-agent systems (cf. e.g. [4, 18]).\\\\nElgesem defines a logic with two modalities E and C (in general indexed over agents; all\\\\nresults below easily generalise to the multi-agent case), read the agent brings about and the\\\\nagent is capable of realising, respectively. The semantics is given by a class of conditional\\\\nframes (X, f : X  QX  PX) (Example 2.10.3), called selection function models in this\\\\ncontext. The clauses for the modal operators are\\\\nx |= E iff\\\\n\\\\nx  f (w)([[]]) and\\\\n\\\\nx |= C iff\\\\n\\\\nf (w)([[]]) 6= .\\\\n\\\\nThe relevant class of selection function models (X, f ) is defined by the conditions\\\\n(E1)\\\\n(E2)\\\\n(E3)\\\\n\\\\nf (x)(X) = \\\\nf (x)(A)  f (x)(B)  f (x)(A  B)\\\\nf (x)(A)  A.\\\\n\\\\nIt is shown in [7, 12] that the logic of agency is completely axiomatised by C, C,\\\\nEa  Eb  E(a  b), Ea  a, and Ea  Ca. Notably, the agent is incapable of realising\\\\nwhat is logically necessary (C), i.e. the notion of realising a state of affairs entails actual\\\\nattributability (this axiom is weaker than previous formulations using avoidability; cf. the\\\\nbaby food example in [7]). Monotonicity is not imposed. The axiom C is due to [12].\\\\nMost of the information in selection function models (motivated by philosophical considerations in [7]) is irrelevant for the semantics of E and C: one only needs to know whether\\\\nf (x)(A) is non-empty, and whether it contains x. Moreover, the selection function semantics fails to be coalgebraic, as the naturality condition fails for the (generalised) predicate\\\\nlifting implicit in the clause for E. Both problems are easily remedied by moving to the\\\\nfollowing coalgebraic semantics: put 3 = {, , } (to represent the cases f (x)(A) = ,\\\\nx\\\\n/ f (x)(A) 6= , and x  f (x)(A), respectively), and take as signature functor the 3-valued\\\\nneighborhood functor N3 given by N3 (X) = Q(X)  3 (with Q(X) denoting contravariant powerset). We define the copointed functor A as the subfunctor of N3  Id such that\\\\n(f, x)  A(X) iff for all A, B  X,\\\\n(E1 )\\\\n(E2 )\\\\n(E3a )\\\\n(E3b )\\\\n\\\\nf (X) = \\\\nf (A)  f (B)  f (A  B)\\\\nf () = \\\\nf (A) =  = x  A\\\\n13\\\\n\\\\n\\\\fwhere  and  refer to the ordering  <  < . We define a structure over A for the modal\\\\nlogic of agency by\\\\n[[E]]X A = {f : Q  3 | f (A) = }\\\\n[[C]]X A = {f : Q  3 | f (A) 6= }.\\\\nProposition 4.1. A formula of the modal logic of agency is satisfiable in a selection function\\\\nmodel iff it is satisfiable over A.\\\\nProof. Only if: Given a selection function\\\\n\\\\n\\\\n\\\\n \\\\nf (x)(A) = \\\\n\\\\n\\\\n\\\\n\\\\nmodel (X, f ), define an N3 -coalgebra (X, f ) by\\\\nif x  f (x)(A)\\\\nif x \\\\n/ f (x)(A) 6= \\\\nif f (x)(A) = .\\\\n\\\\nIt is clear that (X, f ) is an A-coalgebra and that x  X satisfies the same formulas in (X, f )\\\\nas in (X, f ).\\\\nIf : Let (X, f ) be an A-coalgebra. We can assume that |[[]](X,f ) | 6= 1 for all formulas \\\\n(otherwise, form the coproduct of (X, f ) with itself, so that each state has a twin satisfying\\\\nthe same formulas). We define a selection function model (X, f ) by\\\\n\\\\n\\\\nif f (x)(A) = \\\\nA\\\\n \\\\nf (x)(A) = A  {x} if f (x)(A) = \\\\n\\\\n\\\\n\\\\nif f (x)(A) = .\\\\nIt is clear that (X, f ) satisfies E1E3. One shows by induction over the formula structure that\\\\nx  X satsifies the same formulas in (X, f ) as in (X, f ), with the only non-trivial point being\\\\nthat in the step for the modal operator C, one has to note that, by the above assumption,\\\\n[[]](X,f )  {x} =\\\\n6  whenever f (x)([[]](X,f ) ) = .\\\\nTo avoid exponential explosion, we represent elements of N3 (X), for X finite, using partial\\\\nmaps f0 : Q(X)  3. To enforce (E2 ),Vwe let such an f0 represent the map f : Q(X)  3\\\\nthat maps\\\\nB  X to the maximum of ni=1 f0 (Ai ), taken over all sets A1 , . . . , An  X such\\\\nT\\\\nthat Ai = B and f0 (Ai ) is defined for all i; when no such sets exist, the maximum is\\\\nunderstood to be .\\\\nLemma 4.2. Let f0 and f be as above.\\\\n1.\\\\n2.\\\\n3.\\\\n4.\\\\n5.\\\\n6.\\\\n\\\\nWhenever f0 (A) is defined, then f0 (A)  f (A).\\\\nT\\\\nLet b  3. Then f (A)  b iff {B  X | A  B, f0 (B)  b defined} = A.\\\\nThe pair (f, x) satisfies (E1 ) iff f0 (X) is either undefined or equals .\\\\nThe pair (f, x) satisfies (E2 ).\\\\nT\\\\nThe pair (f, x) satisfies (E3a ) iff {A  X | f0 (A) >  defined} =\\\\n6 .\\\\n\\\\nThe pair (f, x) satisfies (E3b ) iff whenever f0 (A) =  is defined, then x  A.\\\\n\\\\nProof. 1.: Trivial.\\\\nT\\\\n2.: If is trivial. Only if: by assumption, A = ni=1 Bi for some Bi such that f0 (Bi )  b is\\\\ndefined for all i; the claim follows immediately.\\\\n14\\\\n\\\\n\\\\fT\\\\n3.: Only if is immediate by 1., and if holds because X = Ai implies Ai = X for all i.\\\\n4.: By construction.\\\\n5.: Immediate by 2.\\\\nT\\\\n6.: Only if holds by 1., and if holds because f (B) =  implies that B = Ai for sets Ai\\\\nsuch that f0 (Ai ) =  for all i.\\\\nBy Lemma 4.2, it is immediate that one-step model checking is in P . To prove the OSPMP, let\\\\n(X, , f : Q(X)  3, x) be a one-step model of a one-step pair (, ) over V . By Remark 3.3,\\\\nwe can assume that X is finite. Let the set Y  X consist of\\\\n the element x;\\\\n an element yab T (a) \\\\\\\\  (b) for each pair (a, b)  V 2 such that  (a) 6  (b);\\\\n an element za  { (b) | b  V,  (a)   (b), f ( (b)) > f ( (a))} \\\\\\\\  (a) for each a  V (za\\\\nexists by (E2 )); and T\\\\n an element w0  { (b) | f ( (b)) > } (w0 exists by (E2 ) and (E3a )).\\\\nPut Y (a) =  (a)  Y for a  V , and let fY be represented by the partial map f0 taking Y (a)\\\\nto f ( (a)) (f0 is well-defined by construction of Y ). Then Y and (fY , x) are of polynomial\\\\nsize in , and (Y, Y ) |= . By Lemma 4.2, (fY , x) is in A(X), with the criterion for (E3a )\\\\nsatisfied due to w0  Y . By Lemma 4.2.2, the za  Y ensure that fY (Y (a)) = f ( (a)) for all\\\\na  V , so that fY |=1(Y,Y ) .\\\\nBy Corollary 3.10, we obtain that the modal logic of agency is in PSPACE, and that\\\\nbounding the modal nesting depth brings the complexity down to NP. Both results (and even\\\\ndecidability) seem to be new. In the light of the previous observation that the agglomeration\\\\naxiom Ea  Eb  E(a  b) tends to cause PSPACE-hardness [31], we conjecture that the\\\\nPSPACE upper bound is tight.\\\\n\\\\n5\\\\n\\\\nExponential Branching\\\\n\\\\nIn cases where the OSPMP fails, it may still be possible to obtain a PSPACE upper bound\\\\nby traversing an exponentially branching shallow model (by Remark 3.3, branching is never\\\\nworse than exponential). The crucial prerequisite is that exponential-size one-step models\\\\ncan be traversed pointwise, accumulating during the traversal a polynomial amount of information that suffices for one-step model checking. This requires additional assumptions on the\\\\nsignature functor S0 :\\\\nDefinition 5.1. We say that S0 is pointwise bounded w.r.t. a set C if for all sets X, there\\\\nexists an injection S0 X  (X  C) (i.e. |S0 X|  |X  C|). We then identify S0 X with a\\\\nsubset of X  C.\\\\n(Note that the above does not require that X. X  C is functorial.) Recall from [27] that\\\\nthe signature functor S0 admits a separating set of unary predicate liftings (separation is\\\\na necessary condition for the generalised Hennessy-Milner property) iff the family of maps\\\\nS0 f : S0 X  S0 2, indexed over all maps f : X  2 = {, }, is jointly injective for each\\\\nset X. Typically, functors S0 satisfying this condition satisfy the stronger requirement that\\\\nalready the family of maps (S0 1{x} : S0 X  S0 2)xX is jointly injective, where 1A denotes\\\\nthe characteristic function of A  X, so that S0 is pointwise bounded w.r.t. S0 2; often, even\\\\na quotient of S0 2 will suffice. Of the signature functors mentioned in Example 2.10, P and\\\\nD are pointwise bounded (w.r.t. 2 and [0, 1], respectively), while Cf and P  D fail to be so.\\\\n15\\\\n\\\\n\\\\fFurther examples of pointwise bounded functors include the game frame functor appearing\\\\nin the semantics of coalition logic [29] and the multiset functor introduced below.\\\\nAssume from now on that S0 is pointwise bounded w.r.t. C, with a given representation\\\\nof elements of C (Convention 2.11 is no longer needed). For t : X  C, we define\\\\nmaxsize(t) = max size(t(x)),\\\\nxX\\\\n\\\\nand put maxsize(t, x) = maxsize(t) for x  X.\\\\nDefinition 5.2. We say that M has the one-step pointwise polysize model property\\\\n(OSPPMP) if there exists a polynomial p such that, whenever a one-step pair (, ) over V\\\\nhas a one-step model (X, , t, x), then it has a one-step model (Y, , s, y) such that |Y |  2|V | ,\\\\nmaxsize(s)  p(||), and y  (a) iff x   (a) for all a  V ; such a model is called pointwise\\\\npolysize.\\\\nBy Remark 3.3, the actual content of the OSPPMP is the polynomial bound on maxsize(s).\\\\nThe OSPPMP holds for all pointwise bounded functors mentioned so far, trivially so in cases\\\\nwhere C is finite. We have a variant of Theorem 3.5, proved entirely analogously, which states\\\\nthat under the OSPPMP, every satisfiable formula  is satisfied in a shallow model (X, )\\\\nwith branching degree at most 2|| and maxsize((x)) polynomially bounded in ||. For the\\\\nensuing algorithmic treatment, we need a refined notion of one-step model checking:\\\\nDefinition 5.3. The pointwise one-step model checking problem is to check, given a map\\\\nt : X  C, x  X, a P(X)-valuation  for V , Y  X, and a conjunctive clause  over (V ),\\\\nwhether (t, x)  SY  (X  C)  X and t |=1Y,Y , where Y (a) =  (a)  Y for a  V . We\\\\nsay that this problem is PSPACE-tractable if it is decidable on a non-deterministic Turing\\\\nmachine with input tape that uses space polynomial in maxsize(t) and accesses each input\\\\nsymbol at most once.\\\\nTheorem 5.4. If M has the OSPPMP and pointwise one-step model checking is PSPACEtractable, then the satisfiability problem of F() is in PSPACE.\\\\nProof. Let M be a decision procedure for pointwise one-step model checking as required in the\\\\ndefinition of PSPACE-tractability (Defn. 5.3). Let p be a polynomial witnessing the OSPPMP\\\\nas in Definition 5.2. Then the following non-deterministic algorithm decides satisfiability of\\\\nF()-formulas:\\\\nAlgorithm 5.5. 1. If rank() = 0, terminate successfully if  evaluates to , else unsuccessfully. Otherwise:\\\\n2. Take V and  as in the proof of Theorem 3.5, and guess a conjunctive clause   over (V )\\\\ncontaining for each subformula L(1 , . . . , n ) of  either L(a1 , . . . , an ) or L(a1 , . . . , an )\\\\n  propositionally entails .\\\\nsuch that \\\\n \\\\n,\\\\n3. Call M with arguments X, , Y, t as in Definition 5.3 to check that t  T Y and t |=1\\\\nwith Y as in Definition 5.3. Here, X = 2V ,  (a) = {B  X | a  B},\\\\n^\\\\n^\\\\nY = {B  X |\\\\n\\\\n satisfiable}\\\\na B\\\\n\\\\na B\\\\n/\\\\n\\\\nis calculated recursively, and t  (X  C) with maxsize(t)  p(||) is guessed.\\\\n16\\\\n\\\\n(Y,Y )\\\\n\\\\n\\\\fIt remains to see that the above algorithm can be implemented in polynomial space although\\\\nthe input to M in Step 3 is of overall exponential size. This is achieved by replacing read\\\\noperations on the input tape in M by calls to a procedure passed by the caller, which produces\\\\nthe k-th input symbol on demand, and then calling the modified pointwise model checker M \\\\nwith such a procedure instead of the full argument. By the assumption that M accesses each\\\\nsymbol on the input tape at most once, there is no need to keep the symbols representing the\\\\nguessed value t in memory after they have been passed to M  . Therefore, only polynomial\\\\nspace overhead is generated by the input to M  (the input procedure depends on  and hence\\\\nhas representation size O(||)); the space usage of M  itself is polynomial in maxsize(t) and\\\\ntherefore in ||.\\\\nExample 5.6. Theorem 5.4 applies e.g. to the modal logics K and T , as well as to probabilistic modal logic; however, as all these logics in fact enjoy the OSPMP, the method of\\\\nSect. 3 is preferable in these cases. A more interesting application is given by graded modal\\\\nlogic [11], or more generally Presburger modal logic [6].\\\\nPnIn its single-agent version, Presburger modal logic has n-ary modal operators\\\\ni=1 ai #( )  b, where b and the ai are integers and   {<, >, =}  {k | k  N}. A\\\\ncoalgebraic semantics for this logic, equivalent for purposes of satisfiability to the ordered\\\\ntree semantics given in [6], is defined over the finite multiset functor B, which maps a set X\\\\nto the set of maps B : X  N with finite support, the intuition being\\\\nP that B is a multiset\\\\ncontaining x  X with multiplicity B(x). For A  X, put B(A) = xA B(x). B-coalgebras\\\\nare graphs with N-weighted edges. The above modalities are interpreted by\\\\nP\\\\nP\\\\n[[ ni=1 ai #( )  b]]X (A1 , . . . , An ) = {B  B(X) | ni=1 ai B(Ai )  b},\\\\nwith >, <, = interpreted as expected, and k as equality modulo k. This logic extends graded\\\\nmodal logic, whose operators k now become #( ) > k.\\\\nOf course, B is pointwise bounded w.r.t. N. It follows easily from estimates on solution sizes\\\\nof integer linear equalities [24] that Presburger modal logic has the OSPPMP [6]. Moreover,\\\\ngiven a conjunctive clause  over (V ), a P(X)-valuation  , and B  B(X), one can check\\\\nwhether B |=1X,  by traversing X and computing the B( (a)) by successive summation; it is\\\\nthus easy to see that pointwise one-step model checking is PSPACE-tractable. It follows that\\\\nPresburger modal logic is in PSPACE. While this is proved already in [6], using essentially the\\\\nsame type of algorithm1 , our method extends straightforwardly to extensions of Presburger\\\\nmodal logic by certain frame conditions such as reflexivity (modelled by the copointed functor\\\\nSX = {(B, x)  BX  X | B(x) > 0}) or e.g. the condition that at least half of all transitions\\\\nfrom a given state are loops (modelled by the copointed functor SX = {(B, x)  BX  X |\\\\nB(x)  B(X  {x}}). In particular, this implies that graded modal logic over reflexive frames\\\\n(i.e. the logic T n of [11]) is in PSPACE, to our knowledge a new result. The logic T n can be\\\\nseen as a description logic with qualified number restrictions on a single reflexive role. Our\\\\narguments extend straightforwardly to show that a description logic with role hierarchies,\\\\nreflexive roles, and qualified number restrictions has concept satisfiability over the empty T box in PSPACE. As reflexivity of a role R is expressed by the role inclusion id()  R, where\\\\nid () denotes the identity role, this logic is a fragment of ALCHQ(id ) [1].\\\\n1\\\\nThe claim that a (rank-1) logic further extended by regularity constraints is still in PSPACE is retracted\\\\nin the full version of [6] as being based on possibly erroneous third-party results.\\\\n\\\\n17\\\\n\\\\n\\\\f6\\\\n\\\\nConclusion\\\\n\\\\nWe have formulated two local semantic conditions that guarantee PSPACE upper bounds\\\\nfor the satisfiability problem of modal logics in a coalgebraic framework: the OSPMP (onestep polysize model property) and its pointwise variant, the OSPPMP, which is weaker but\\\\nrelies on additional assumptions on the coalgebraic semantics. Both conditions allow a direct\\\\nconstruction of shallow models and their traversal in polynomial space. This complements\\\\nearlier work [29] where syntactic criteria have been used  in particular, both the OSPMP\\\\nand the OSPPMP can be applied even when no complete axiomatisation of the logic at hand\\\\nis known. Several instantiations of our results to logics studied in the literature witness both\\\\ntheir generality and their usefulness: Apart from re-proving known PSPACE upper bounds\\\\nfor the normal modal logics K and T as well as for the conditional logics CK , CK +ID, and\\\\nCK +MP, we have\\\\n given a systematic account of tight PSPACE upper bounds in modal logics of quantitative\\\\nuncertainty that establishes new complexity bounds in some cases;\\\\n obtained a new PSPACE upper bound for Elgesems modal logic of agency and for graded\\\\n(even Presburger [6]) modal logic over reflexive frames [11], and more generally for an extension of the description logic ALCHQ with reflexive roles [1];\\\\n established (to our knowledge: new) tight NP upper bounds for bounded-rank fragments\\\\nof the conditional logics CK , CK +ID, and CK +MP.\\\\nOngoing work focusses on the extension of our results to iterative modal logics, defined by\\\\nframe conditions of higher rank, which however  in particular outside the realm of Kripke\\\\nsemantics  exhibit a tendency towards higher complexity or even undecidability (indeed, it\\\\nseems to be the case that all known iterative PSPACE-complete modal logics are normal).\\\\n\\\\nReferences\\\\n[1] F. Baader, D. Calvanese, D. L. McGuinness, D. Nardi, and P. F. Patel-Schneider, editors.\\\\nThe Description Logic Handbook. Cambridge University Press, 2003.\\\\n[2] M. Barr. Terminal coalgebras in well-founded set theory. Theoret. Comput. Sci., 114:299\\\\n315, 1993.\\\\n[3] B. Chellas. Modal Logic. Cambridge Univ. Press, 1980.\\\\n[4] L. Cholvy, C. Garion, and C. Saurel. Ability in a multi-agent context: A model in\\\\nthe situation calculus. In Computational Logic in Multi-Agent Systems, CLIMA 2005,\\\\nvolume 3900 of LNCS, pages 2336. Springer, 2006.\\\\n[5] C. Crstea and D. Pattinson. Modular construction of modal logics. In Concurrency\\\\nTheory, volume 3170 of LNCS, pages 258275. Springer, 2004.\\\\n[6] S. Demri and D. Lugiez. Presburger modal logic is only PSPACE-complete. In Automated\\\\nReasoning, IJCAR 06, volume 4130 of LNAI, pages 541556. Springer, 2006.\\\\n[7] D. Elgesem. The modal logic of agency. Nordic J. Philos. Logic, 2:146, 1997.\\\\n[8] R. Fagin and J. Y. Halpern. Reasoning about knowledge and probability. J. ACM,\\\\n41:340367, 1994.\\\\n18\\\\n\\\\n\\\\f[9] R. Fagin, J. Y. Halpern, and N. Megiddo. A logic for reasoning about probabilities.\\\\nInform. Comput., 87:78128, 1990.\\\\n[10] M. Fattorosi-Barnaba and F. De Caro. Graded modalities I. Stud. Log., 44:197221,\\\\n1985.\\\\n[11] K. Fine. In so many possible worlds. Notre Dame J. Formal Logic, 13:516520, 1972.\\\\n[12] G. Governatori and A. Rotolo. On the axiomatisation of Elgesems logic of agency and\\\\nability. J. Philos. Logic, 34:403431, 2005.\\\\n[13] J. Halpern. The effect of bounding the number of primitive propositions and the depth\\\\nof nesting on the complexity of modal logic. Artificial Intelligence, 75:361372, 1995.\\\\n[14] J. Halpern and R. Pucella. A logic for reasoning about upper probabilities. J. Artificial\\\\nIntelligence Res., 17:5781, 2002.\\\\n[15] J. Halpern and R. Pucella. Reasoning about expectation. In Uncertainty in Artificial\\\\nIntelligence, UAI 02, pages 207215. Morgan Kaufman, 2002.\\\\n[16] J. Y. Halpern and Y. O. Moses. A guide to completeness and complexity for modal logics\\\\nof knowledge and belief. Artificial Intelligence, 54:319379, 1992.\\\\n[17] B. Jacobs. Towards a duality result in the modal logic of coalgebras. In Coalgebraic\\\\n",
    "Methodology": "Methods in Computer Science, CMCS 2000, volume 33 of ENTCS. Elsevier, 2000.\\\\n[18] A. Jones and X. Parent. Conventional signalling acts and conversation. In Advances in\\\\nAgent Communication, volume 2922 of LNAI, pages 117. Springer, 2004.\\\\n[19] A. Kurz. Specifying coalgebras with modal logic. Theoret. Comput. Sci., 260:119138,\\\\n2001.\\\\n[20] R. Ladner. The computational complexity of provability in systems of modal propositional logic. SIAM J. Comput., 6:467480, 1977.\\\\n[21] D. Lewis. Intensional logics without iterative axioms. J. Philos. Logic, 3:457466, 1975.\\\\n[22] N. Olivetti, G. L. Pozzato, and C. Schwind. A sequent calculus and",
    "Experiment": " a theorem prover\\\\nfor standard conditional logics. ACM Trans. Comput. Logic. To appear.\\\\n[23] E. Pacuit and S. Salame. Majority logic. In Principles of Knowledge Representation and\\\\nReasoning, KR 04, pages 598605. AAAI Press, 2004.\\\\n[24] C. H. Papadimitriou. On the complexity of integer programming. J. ACM, 28:765768,\\\\n1981.\\\\n[25] D. Pattinson. Coalgebraic modal logic: Soundness, completeness and decidability of local\\\\nconsequence. Theoret. Comput. Sci., 309:177193, 2003.\\\\n[26] M. Pauly. A modal logic for coalitional power in games. J. Logic Comput., 12:149166,\\\\n2002.\\\\n[27] L. Schr \\\\noder. Expressivity of coalgebraic modal l",
    "Discussion": "ogic: the limits and beyond. Theoret.\\\\nComput. Sci. In press.\\\\n19\\\\n\\\\n\\\\f[28] L. Schr \\\\noder. A finite model construction for coalgebraic modal logic. J. Log. Algebr.\\\\nProg., 73:97110, 2007.\\\\n[29] L. Schr \\\\noder and D. Pattinson. PSPACE reasoning for rank-1 modal logics. In Logic in\\\\nComputer Science, LICS 06, pages 231240. IEEE, 2006. Extended version to appear in\\\\nACM Trans. Comput. Log.\\\\n[30] S. Tobies. PSPACE reasoning for graded modal logics. J. Logic Comput., 11:85106,\\\\n2001.\\\\n[31] M. Vardi. On the complexity of epistemic reasoning. In Logic in Computer Science,\\\\nLICS 89, pages 243251. IEEE, 1989.\\\\n\\\\n20\\\\n\\\\n\\\\f\"}\\n'"
  },
  "key_words": {
    "Abstract": [
      [
        "iterative modal logics",
        0.6565
      ],
      [
        "bounds modal logics",
        0.6553
      ],
      [
        "modal logics roughly",
        0.6322
      ],
      [
        "modal logics nlutz",
        0.6181
      ],
      [
        "graded modal logic",
        0.6155
      ]
    ],
    "Introduction": [
      [
        "modal logic pspace",
        0.6536
      ],
      [
        "upper bounds logics",
        0.6408
      ],
      [
        "modal logics quantitative",
        0.6274
      ],
      [
        "logic pspace",
        0.6057
      ],
      [
        "logic lower pspace",
        0.6004
      ]
    ],
    "Related Work": [
      [
        "boolean operations straightforward",
        0.5161
      ],
      [
        "boolean operations",
        0.4892
      ],
      [
        "steps boolean operations",
        0.4745
      ],
      [
        "nthe steps boolean",
        0.4367
      ],
      [
        "logic operators",
        0.41
      ]
    ],
    "Methodology": [
      [
        "modal logic theoret",
        0.6543
      ],
      [
        "coalgebras modal logic",
        0.597
      ],
      [
        "logic theoret comput",
        0.5942
      ],
      [
        "intensional logics iterative",
        0.5667
      ],
      [
        "modal propositional logic",
        0.5593
      ]
    ],
    "Experiment": [
      [
        "coalgebraic modal logic",
        0.6343
      ],
      [
        "logic coalitional",
        0.6235
      ],
      [
        "logic coalitional power",
        0.6148
      ],
      [
        "modal logic coalitional",
        0.6066
      ],
      [
        "modal logic soundness",
        0.554
      ]
    ],
    "Discussion": [
      [
        "graded modal logics",
        0.5884
      ],
      [
        "complexity epistemic reasoning",
        0.5656
      ],
      [
        "rank modal logics",
        0.5588
      ],
      [
        "coalgebraic modal logic",
        0.5453
      ],
      [
        "modal logics",
        0.5452
      ]
    ]
  },
  "summarization": {
    "Abstract": "shallow models for non-Iterative Modal Logics. No complete axiomatisation of the logic is needed to establish PSPACE bounds for a large class of modal logics in a coalgebraic framework. The method can be used to obtain previously unknown PSPACE -bounds.",
    "Introduction": "PSPACE upper bounds for special purpose modal logics are often decidable. We present a set of methods to establish uniform PSPACE bounds for certain classes of logics. The methods can be used to construct models for logics with one-step polysize models.",
    "Related Work": "conviction of Theorem 3.5 of the OSPMP can be expressed in terms of polynomially branching models. We prove that the branching degree of a one-step model is polynomial in a certain size. Theorems in the proof are theorems on the polynometric bound of a conjunctive clause.",
    "Methodology": "Methods in Computer Science, CMCS 2000, volume 33 of ENTCS. A. Kurz: Specifying coalgebras with modal logic. D. Lewis: Intensional logics without iterative axioms in the 1970s and 1980s.",
    "Experiment": "a. a theorem prover for standard conditional logics. to appear in ACM Trans. Comput. Logic to appear.    in Principles of Knowledge Representation and Reasoning, KR 04, pages 598605-5, 2004.  in the book, \"majority logic\"",
    "Discussion": "ogic: the limits and beyond. L. Schr and D. Pattinson. PSPACE reasoning for rank-1 modal logics. Theorems on the complexity of epistemic reasoning in the form of a finite model construction for coalgebraic modal logic."
  }
}